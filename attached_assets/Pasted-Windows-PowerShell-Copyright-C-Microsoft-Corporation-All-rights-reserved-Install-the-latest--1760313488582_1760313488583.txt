Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\Users\joe> cd C:\Projects\JitsPlannerPro
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> # Clean everything
PS C:\Projects\JitsPlannerPro> Write-Host "Cleaning old builds..."
Cleaning old builds...
PS C:\Projects\JitsPlannerPro> Remove-Item -Path dist -Recurse -Force -ErrorAction SilentlyContinue
PS C:\Projects\JitsPlannerPro> Remove-Item -Path android\app\build -Recurse -Force -ErrorAction SilentlyContinue
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> # Update to version 27
PS C:\Projects\JitsPlannerPro> Write-Host "Updating to version 27..."
Updating to version 27...
PS C:\Projects\JitsPlannerPro> (Get-Content android\app\build.gradle) -replace 'versionCode \d+', 'versionCode 27' -replace 'versionName "[\d.]+"', 'versionName "1.0.27"' | Set-Content android\app\build.gradle
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> # Build
PS C:\Projects\JitsPlannerPro> Write-Host "Building frontend..."
Building frontend...
PS C:\Projects\JitsPlannerPro> npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (1) index.htmlBrowserslist: browsers data (caniuse-lite) is 12 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 26 modules transformed.
x Build failed in 1.89s
error during build:
[vite:esbuild] Transform failed with 1 error:
C:/Projects/JitsPlannerPro/client/src/contexts/AuthContext.tsx:286:1: ERROR: Expected ")" but found ";"
file: C:/Projects/JitsPlannerPro/client/src/contexts/AuthContext.tsx:286:1

Expected ")" but found ";"
284|
285|    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
286|  };
   |   ^
287|
288|

    at failureErrorWithLog (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:1472:15)
    at C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:755:50
    at responseCallbacks.<computed> (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:622:9)
    at handleIncomingPacket (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:677:12)
    at Socket.readFromStdout (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:600:7)
    at Socket.emit (node:events:519:28)
    at addChunk (node:internal/streams/readable:561:12)
    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)
    at Readable.push (node:internal/streams/readable:392:5)
    at Pipe.onStreamRead (node:internal/stream_base_commons:189:23)
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> Write-Host "Syncing to Android..."
Syncing to Android...
PS C:\Projects\JitsPlannerPro> npx cap sync android
\ copy android [warn] Cannot copy web assets from public to android\app\src\main\assets\public
       Web asset directory specified by webDir does not exist. This is not an
       error because server.url is set in config.
âˆš Creating capacitor.config.json in android\app\src\main\assets in 2.91ms
âˆš copy android in 104.81ms
âˆš Updating Android plugins in 30.29ms
[info] Found 3 Capacitor plugins for android:
       @capacitor/app@7.1.0
       @capacitor/http@0.0.2
       @capacitor/preferences@7.0.2
/ update android [warn] @capacitor/http@0.0.2 doesn't officially support Capacitor ^7.0.0 yet,
       doing our best moving it's package to build.gradle so it builds
âˆš update android in 246.65ms
[info] Sync finished in 0.49s
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> Write-Host "Building AAB..."
Building AAB...
PS C:\Projects\JitsPlannerPro> cd android
PS C:\Projects\JitsPlannerPro\android> .\gradlew.bat clean bundleRelease

> Configure project :app
WARNING: Using flatDir should be avoided because it doesn't support any meta-data formats.

> Configure project :capacitor-cordova-android-plugins
WARNING: Using flatDir should be avoided because it doesn't support any meta-data formats.
<=========----> 71% CONFIGURING [41s]
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> IDLE
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
> :capacitor-http > Resolve files of configuration 'classpath'
Terminate batch job (Y/N)? y
PS C:\Projects\JitsPlannerPro\android> cd ..
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> Write-Host "`nâœ… VERSION 27 BUILT - WITH CAPACITOR HTTP FIX!"

âœ… VERSION 27 BUILT - WITH CAPACITOR HTTP FIX!
PS C:\Projects\JitsPlannerPro> Write-Host "Upload: android\app\build\outputs\bundle\release\app-release.aab"
Upload: android\app\build\outputs\bundle\release\app-release.aab
PS C:\Projects\JitsPlannerPro> Write-Host "`nThis version uses Capacitor's native HTTP plugin which properly sends Authorization headers on mobile!"

This version uses Capacitor's native HTTP plugin which properly sends Authorization headers on mobile!
PS C:\Projects\JitsPlannerPro> Write-Host "`nAfter uploading to Play Store and installing on your phone:"

After uploading to Play Store and installing on your phone:
PS C:\Projects\JitsPlannerPro> Write-Host "1. Uninstall the old app completely (to clear cache)"
1. Uninstall the old app completely (to clear cache)
PS C:\Projects\JitsPlannerPro> Write-Host "2. Install version 27 from Play Store"
2. Install version 27 from Play Store
PS C:\Projects\JitsPlannerPro> Write-Host "3. Log in and try creating a gym"
3. Log in and try creating a gym
PS C:\Projects\JitsPlannerPro> Write-Host "4. Check Render logs - you should see 'âœ… Supabase> Write-Host "4. Check Render logs - you should see 'âœ… Supabase token verified' instead of 401 errors!"
4. Check Render logs - you should see 'âœ… Supabase token verified' instead of 401 errors!
PS C:\Projects\JitsPlannerPro> # Check if the package was installed correctly
PS C:\Projects\JitsPlannerPro> npm list @capacitor/http
rest-express@1.0.0 C:\Projects\JitsPlannerPro
`-- @capacitor/http@0.0.2

PS C:\Projects\JitsPlannerPro> cd C:\Projects\JitsPlannerPro
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> # Update queryClient with correct import syntax
PS C:\Projects\JitsPlannerPro> $queryClientFixed = @'
>> import { QueryClient } from '@tanstack/react-query';
>> import { supabase } from './supabase';
>> import { Capacitor } from '@capacitor/core';
>> import { Http } from '@capacitor-community/http';
>>
>> // Get API base URL - use Render for mobile app, env var for web, or relative path
>> const API_BASE_URL = Capacitor.isNativePlatform()
>>   ? 'https://bjj-jits-journal.onrender.com'
>>   : (import.meta.env.VITE_API_BASE_URL || '');
>>
>> async function getSupabaseToken(): Promise<string | null> {
>>   try {
>>     const { data: { session } } = await supabase.auth.getSession();
>>     return session?.access_token || null;
>>   } catch (e) {
>>     console.error('Failed to get Supabase token:', e);
>>     return null;
>>   }
>> }
>>
>> export const queryClient = new QueryClient({
>>   defaultOptions: {
>>     queries: {
>>       retry: 1,
>>       refetchOnWindowFocus: false,
>>       queryFn: async ({ queryKey }) => {
>>         let token = await getSupabaseToken();
>>         if (!token) {
>>           token = sessionStorage.getItem('bjj_auth_token') || localStorage.getItem('bjj_auth_token');
>>         }
>>
>>         const headers: Record<string, string> = {
>>           'Content-Type': 'application/json',
>>         };
>>
>>         if (token) {
>>           headers['Authorization'] = `Bearer ${token}`;
>>           console.log('ðŸ“± Sending Authorization header with token');
>>         }
>>
>>         const url = `${API_BASE_URL}${queryKey[0] as string}`;
>>         const response = await fetch(url, { headers });
>>
>>         if (!response.ok) {
>>           if (response.status === 401 || response.status === 403) {
>>             console.log('Authentication failed in query');
>>             sessionStorage.setItem('auth_failure', 'true');
>>           }
>>           throw new Error(`${response.status}: ${response.statusText}`);
>>         }
>>         return response.json();
>>       },
>>     },
>>   },
>> });
>>
>> export async function apiRequest(method: string, url: string, data?: any) {
>>   let token = await getSupabaseToken();
>>   if (!token) {
>>     token = sessionStorage.getItem('bjj_auth_token') || localStorage.getItem('bjj_auth_token');
>>   }
>>
>>   const headers: Record<string, string> = {
>>     'Content-Type': 'application/json',
>>   };
>>
>>   if (token) {
>>     headers['Authorization'] = `Bearer ${token}`;
>>     console.log('ðŸ“± Sending Authorization header with token in apiRequest');
>>   }
>>
>>   const options: RequestInit = {
>>     method,
>>     headers,
>>   };
>>
>>   if (data) {
>>     options.body = JSON.stringify(data);
>>   }
>>
>>   const fullUrl = `${API_BASE_URL}${url}`;
>>   const response = await fetch(fullUrl, options);
>>
>>   if (!response.ok) {
>>     if (response.status === 401 || response.status === 403) {
>>       console.log('Authentication failed in API request');
>>       throw new Error('Authentication required. Please refresh the page and try again.');
>>     }
>>
>>     let errorMessage = `${response.status}: ${response.statusText}`;
>>     try {
>>       const errorData = await response.json();
>>       errorMessage = errorData.message || errorMessage;
>>     } catch {
>>       const errorText = await response.text();
>>       errorMessage = `${response.status}: ${errorText}`;
>>     }
>>     throw new Error(errorMessage);
>>   }
>>
>>   return response;
>> }
>> '@
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> $queryClientFixed | Set-Content client\src\lib\queryClient.ts -Encoding UTF8
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> Write-Host "âœ… Fixed queryClient - removed Capacitor HTTP (not needed)"
âœ… Fixed queryClient - removed Capacitor HTTP (not needed)
PS C:\Projects\JitsPlannerPro> Write-Host "The issue is simpler - we just need to ensure the token is being sent!"
The issue is simpler - we just need to ensure the token is being sent!
PS C:\Projects\JitsPlannerPro> cd C:\Projects\JitsPlannerPro
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> # Remove the unused import line
PS C:\Projects\JitsPlannerPro> $queryClient = Get-Content client\src\lib\queryClient.ts -Raw
PS C:\Projects\JitsPlannerPro> $queryClient = $queryClient -replace "import \{ Http \} from '@capacitor-community/http';`n", ""
PS C:\Projects\JitsPlannerPro> $queryClient | Set-Content client\src\lib\queryClient.ts -Encoding UTF8
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> Write-Host "âœ… Removed unused import"
âœ… Removed unused import
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> # Now build version 27
PS C:\Projects\JitsPlannerPro> Write-Host "`nCleaning and building version 27..."

Cleaning and building version 27...
PS C:\Projects\JitsPlannerPro> Remove-Item -Path dist -Recurse -Force -ErrorAction SilentlyContinue
PS C:\Projects\JitsPlannerPro> Remove-Item -Path android\app\build -Recurse -Force -ErrorAction SilentlyContinue
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> (Get-Content android\app\build.gradle) -replace 'versionCode \d+', 'versionCode 27' -replace 'versionName "[\d.]+"', 'versionName "1.0.27"' | Set-Content android\app\build.gradle
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (1) index.htmlBrowserslist: browsers data (caniuse-lite) is 12 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 19 modules transformed.
x Build failed in 1.99s
error during build:
[vite:esbuild] Transform failed with 1 error:
C:/Projects/JitsPlannerPro/client/src/contexts/AuthContext.tsx:286:1: ERROR: Expected ")" but found ";"
file: C:/Projects/JitsPlannerPro/client/src/contexts/AuthContext.tsx:286:1

Expected ")" but found ";"
284|
285|    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
286|  };
   |   ^
287|
288|

    at failureErrorWithLog (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:1472:15)
    at C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:755:50
    at responseCallbacks.<computed> (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:622:9)
    at handleIncomingPacket (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:677:12)
    at Socket.readFromStdout (C:\Projects\JitsPlannerPro\node_modules\vite\node_modules\esbuild\lib\main.js:600:7)
    at Socket.emit (node:events:519:28)
    at addChunk (node:internal/streams/readable:561:12)
    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)
    at Readable.push (node:internal/streams/readable:392:5)
    at Pipe.onStreamRead (node:internal/stream_base_commons:189:23)
PS C:\Projects\JitsPlannerPro> npx cap sync android
\ copy android [warn] Cannot copy web assets from public to android\app\src\main\assets\public
       Web asset directory specified by webDir does not exist. This is not an
       error because server.url is set in config.
âˆš Creating capacitor.config.json in android\app\src\main\assets in 2.61ms
âˆš copy android in 114.91ms
âˆš Updating Android plugins in 32.86ms
[info] Found 3 Capacitor plugins for android:
       @capacitor/app@7.1.0
       @capacitor/http@0.0.2
       @capacitor/preferences@7.0.2
âˆš update android in 203.48ms
[info] Sync finished in 0.467s
PS C:\Projects\JitsPlannerPro> cd android
PS C:\Projects\JitsPlannerPro\android> .\gradlew.bat clean bundleRelease

> Configure project :app
WARNING: Using flatDir should be avoided because it doesn't support any meta-data formats.

> Configure project :capacitor-cordova-android-plugins
WARNING: Using flatDir should be avoided because it doesn't support any meta-data formats.

> Task :capacitor-android:compileReleaseJavaWithJavac
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

> Task :capacitor-http:compileReleaseJavaWithJavac FAILED
C:\Projects\JitsPlannerPro\node_modules\@capacitor\http\android\src\main\java\com\getcapacitor\plugin\http\Http.java:13: error: cannot find symbol
import com.getcapacitor.PluginRequestCodes;
                       ^
  symbol:   class PluginRequestCodes
  location: package com.getcapacitor
C:\Projects\JitsPlannerPro\node_modules\@capacitor\http\android\src\main\java\com\getcapacitor\plugin\http\Http.java:217: error: cannot find symbol
        savedCall.error("User denied write permission needed to save files");
                 ^
  symbol:   method error(String)
  location: variable savedCall of type PluginCall
Note: C:\Projects\JitsPlannerPro\node_modules\@capacitor\http\android\src\main\java\com\getcapacitor\plugin\http\Http.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
2 errors

[Incubating] Problems report is available at: file:///C:/Projects/JitsPlannerPro/android/build/reports/problems/problems-report.html

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':capacitor-http:compileReleaseJavaWithJavac'.
> Compilation failed; see the compiler output below.
  C:\Projects\JitsPlannerPro\node_modules\@capacitor\http\android\src\main\java\com\getcapacitor\plugin\http\Http.java:13: error: cannot find symbol
  import com.getcapacitor.PluginRequestCodes;
                         ^
    symbol:   class PluginRequestCodes
    location: package com.getcapacitor
  C:\Projects\JitsPlannerPro\node_modules\@capacitor\http\android\src\main\java\com\getcapacitor\plugin\http\Http.java:217: error: cannot find symbol
          savedCall.error("User denied write permission needed to save files");
                   ^
    symbol:   method error(String)
    location: variable savedCall of type PluginCall
  Note: C:\Projects\JitsPlannerPro\node_modules\@capacitor\http\android\src\main\java\com\getcapacitor\plugin\http\Http.java uses or overrides a deprecated API.
  Note: Recompile with -Xlint:deprecation for details.
  2 errors

* Try:
> Check your code and dependencies to fix the compilation error(s)
> Run with --scan to get full insights.

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.13/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD FAILED in 14s
93 actionable tasks: 88 executed, 5 up-to-date
PS C:\Projects\JitsPlannerPro\android> cd ..
PS C:\Projects\JitsPlannerPro>
PS C:\Projects\JitsPlannerPro> Write-Host "`nâœ… VERSION 27 COMPLETE!"

âœ… VERSION 27 COMPLETE!
PS C:\Projects\JitsPlannerPro> Write-Host "Upload: android\app\build\outputs\bundle\release\app-release.aab"